"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#o#c^@+k&e#=&yuozd=c#pfqe$bexy%0&8w!gpcs28z(qv78e#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['freephotostock.pro', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    # App account
    'account.apps.AccountConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    # App social auth
    'social_django',

]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'web_site_with_authorization',
        'USER': 'konstantin_selivanov',
        'PASSWORD': 'postgresadmin',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

"""
Application settings
Настройки приложения
"""
# Specifies the address where Django will redirect user on successful
# authorization, if GET parameter 'next' is not specified
# Указывает адрес, куда Django будет перенаправлять пользователя при успешной
# авторизации, если не указан GET-параметр ' next'
LOGIN_REDIRECT_URL = 'dashboard'
# The address where you want to redirect the user to login to the system,
# for example from handlers with the 'login_required' decorator
# Адрес, куда нужно перенаправлять пользователя для входа в систему, например
# из обработчиков с декоратором 'login_required'
LOGIN_URL = 'login'
# The address by clicking on which the user will log out of his account
# Адрес, перейдя по которому, пользователь выйдет из своего аккаунта
LOGOUT_URL = 'logout'

# Configuring messages to be sent to the console instead of using
# an SMTP server
# Настройка отправки сообщений в консоль вместо использования SMTP-сервера
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


AUTHENTICATION_BACKENDS = [
    # Authentication through email
    'django.contrib.auth.backends.ModelBackend',
    'account.authentication.EmailAuthBackend',
    # Authentication through VK
    'social_core.backends.vk.VKOAuth2',
    # Authentication through Facebook
    'social_core.backends.facebook.FacebookOAuth2',
    # Authentication through Google
    'social_core.backends.google.GoogleOAuth2',
    # Authentication through Instagram
    'social_core.backends.instagram.InstagramOAuth2',

]

# Social auth settings

SOCIAL_AUTH_VK_OAUTH2_KEY = ''  # VK Consumer Key
SOCIAL_AUTH_VK_OAUTH2_SECRET = ''  # VK Consumer Secret
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_KEY = ''  # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = ''  # Facebook App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''  # Google Consumer Key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''  # Google Consumer Secret
SOCIAL_AUTH_INSTAGRAM_OAUTH2_KEY = ''  # Instagram Consumer Key
SOCIAL_AUTH_INSTAGRAM_OAUTH2_SECRET = ''  # Instagram Consumer Secret
SOCIAL_AUTH_INSTAGRAM_OAUTH2_SCOPE = ['email']
